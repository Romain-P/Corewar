/*
** my_check_instruction.c for corewar in /home/antonin.rapini/ModulesTek1/ProgElem/CPE_2016_corewar/asm/sources
** 
** Made by Antonin Rapini
** Login   <antonin.rapini@epitech.net>
** 
** Started on  Wed Mar 29 15:41:26 2017 Antonin Rapini
** Last update Wed Mar 29 18:26:16 2017 Antonin Rapini
*/

#include "my_asm.h"
#include <stdlib.h>

int	my_get_codingbyte(int code, t_params *params)
{
  int	codingbyte;
  int	i;
  int	to_add;

  i = 0;
  codingbyte = 0;
  if (code == 1 || code == 9 || code == 12 || code == 15)
    return (-1);
  while (params[i])
    {
      to_add = params->code == T_REG ? 1 : params->code == T_DIR ? 2 : 3;
      nbr = (nbr << 2) + to_add;
      i++;
    }
  while (i < 4)
    {
      nbr = (nbr << 2);
      i++;
    }
}

int	my_get_optab_index(char *name)
{
  int	i;

  while (op_tab[j].mnemonique && my_strcmp(op_tab[j], name) != 0)
    i++;
  if (op_tab[j].mnemonique == NULL)
    return (-1);
  return (i);
}

int	my_check_instruction(t_instruct *inst)
{
  int	i;
  int	j;
  int	k;
  char	type;

  if ((j = my_get_optab_index(inst->name)) == -1)
    return (1);
  i = 0;
  while (inst->params[i])
    {
      if (i >= (int)op_tab[j].nbr_args)
	return (1);
      type = my_get_paramtype(inst->params[i]);
      if (type ^ op_tab[j].type[i] != op_tab[j].type[i] - type)
	return (1);
      inst->params[i]->type = type;
      i++;
    }
  inst->code = j + 1;
  inst->codingbyte = my_get_codingbyte(inst->code, inst->params);
  return (0);
}
